name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Install dependencies
      run: |
        pipenv sync --dev

    - name: Create test environment file
      run: |
        cp .env.example .env
        echo "FLASK_SECRET_KEY=test-secret-key" >> .env
        echo "FLASK_DEBUG=False" >> .env

    - name: Run unit tests
      run: |
        pipenv run pytest tests/ -k "not e2e" --verbose

    - name: Run pylint
      run: |
        pipenv run pylint "$(git ls-files '*.py')" || true

  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests

    services:
      falkordb:
        image: falkordb/falkordb:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv

    - name: Install dependencies
      run: |
        pipenv sync --dev

    - name: Install Playwright browsers
      run: |
        pipenv run playwright install chromium
        pipenv run playwright install-deps

    - name: Create test environment file
      run: |
        cp .env.example .env
        echo "FALKORDB_HOST=localhost" >> .env
        echo "FALKORDB_PORT=6379" >> .env
        echo "FLASK_SECRET_KEY=test-secret-key-for-ci" >> .env
        echo "FLASK_DEBUG=False" >> .env

    - name: Wait for FalkorDB
      run: |
        timeout 60 bash -c 'until docker exec "$(docker ps -q --filter ancestor=falkordb/falkordb:latest)" redis-cli ping; do sleep 2; done'

    - name: Run E2E tests
      run: |
        pipenv run pytest tests/e2e/ --browser chromium --headed=false
      env:
        CI: true

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: |
          test-results/
          playwright-report/
        retention-days: 30
